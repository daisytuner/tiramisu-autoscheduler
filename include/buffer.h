#pragma once

#include "core.h"

namespace daisy {

namespace tiramisu {

class computation;
class function;

/**
  * A class that represents buffers.
  *
  * Buffers have two use cases:
  * - used to store the results of computations, and
  * - used to represent input arguments to functions.
  */
class buffer
{
    friend computation;

private:
    /**
      * Type of the argument (if the buffer is an argument):
      * Three possible types:
      *  - a_input: for inputs of the function,
      *  - a_output: for outputs of the function,
      *  - a_temporary: for buffers used as temporary buffers within
      *  the function (any temporary buffer is allocated automatically by
      *  the Tiramisu runtime at the entry of the function and is
      *  deallocated at the exit of the function).
      */
    daisy::argument_t argtype;

    /**
      * The sizes of the dimensions of the buffer.  Assuming the following
      * buffer buf[N0][N1][N2], dim_sizes should be {N0, N1, N2}.
      */
    std::vector<int> dim_sizes;

    /**
      * The name of the buffer.
      * Buffer names should not start with _ (an underscore).
      * Names starting with _ are reserved names.
      */
    std::string name;

    /**
      * The type of the elements of the buffer.
      */
    daisy::primitive_t type;

public:
    /**
      * \brief Create a tiramisu buffer.
      *
      * \details
      *
      * A Tiramisu buffer is equivalent to an array in C.
      *
      * Buffers have two use cases:
      * - Used to store the results of computations, and
      * - Used to represent input arguments to functions.
      *
      * \p name is the name of the buffer.
      *
      * \p dim_sizes is a vector of tiramisu expressions that represent the
      * size of each dimension in the buffer.
      * Assuming we want to declare the buffer buf[N0][N1][N2],
      * then the vector of sizes should be {N0, N1, N2}.
      * Buffer dimensions in Tiramisu have the same semantics as in
      * C/C++.
      *
      * \p type is the type of the elements of the buffer.
      * It must be a primitive type (i.e. p_uint8, p_uint16, ...).
      * Possible types are declared in \ref daisy::primitive_t
      * (in type.h).
      *
      * \p argt indicates whether this buffer is an input or an output
      *  buffer and whether it should be allocated automatically by Tiramisu.
      *  The possible types (\ref daisy::argument_t) are:
      *
      *  - daisy::a_input: indicates that the buffer is supposed
      * to be passed as input to the function generated by Tiramisu.
      *
      *  - daisy::a_output: indicates that the buffer is supposed
      * to be passed as output to the function generated by Tiramisu.
      * Input an output buffers should be allocated by the user
      * before calling the Tiramisu generated function.  Tiramisu
      * does not allocated memory for input and output buffers.
      *
      *  - daisy::a_temporary: this buffer is not supposed to
      * be passed to the function as an argument.  It will be
      * allocated automatically by the Tiramisu compiler at
      * the beginning of the function and deallocated at the end
      * of the function.  The user can also allocate the buffer
      * "manually" by setting the automatic allocation to false for
      * this buffer.
      *
      * \p fct is a pointer to a Tiramisu function where the buffer is
      * declared or used.  If this argument is not provided (which is
      * the common case), the function that was created automatically
      * during Tiramisu initialization will be used (we call that
      * function the "implicit function").
      *
      * \p corr is the name of the cpu buffer corresponding to a gpu buffer.
      * This field is only set, when we create a gpu buffer.
      *
      * Buffer names should not start with _ (an underscore).
      * Names starting with _ are reserved names.
      */
    buffer(
      std::string name,
      std::vector<int> dim_sizes,
      daisy::primitive_t type,
      daisy::argument_t argt
    );

    /**
      * \brief If this buffer is an argument to a daisy::function,
      * return the type of the argument
      *
      * \details Three possible types exist:
      *  - daisy::a_input: for inputs of the function,
      *  - daisy::a_output: for outputs of the function,
      *  - daisy::a_temporary: for buffers used as temporary buffers within
      *  the function (any temporary buffer is allocated automatically by
      *  the Tiramisu runtime at the entry of the function and is
      *  deallocated at the exit of the function).
      */
    daisy::argument_t get_argument_type() const;

    /**
      * Return the name of the buffer.
      */
    const std::string &get_name() const;

    /**
      * Get the number of dimensions of the buffer.
      */
    int get_n_dims() const;

    /**
      * Return the type of the elements of the buffer.
      */
    daisy::primitive_t get_elements_type() const;

    /**
      * Return the sizes of the dimensions of the buffer.
      */
    const std::vector<int> &get_dim_sizes() const;

};


}

}

